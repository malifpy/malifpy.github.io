{"version":3,"file":"component---src-pages-post-index-js-2b6e86d41551cdece86d.js","mappings":"2JAIWA,EAAc,sCACdC,EAAc,sCCMzBC,EAAQ,KAIR,IA0CA,EA1Ce,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACrBC,GAAOC,EAAAA,EAAAA,IAAe,cAS5B,OACE,uBAAKC,UDzBc,mCC0BjB,6BACGJ,EADH,MACiBE,EAAKG,KAAKC,aAAaC,OAExC,0BAAQH,UDxBS,oCCwBcF,EAAKG,KAAKC,aAAaC,OACtD,2BACE,sBAAIH,UD7BU,mCC8BZ,sBAAIA,UAAWP,GACb,gBAAC,KAAD,CAAMW,GAAG,IAAIJ,UAAWN,GAAxB,SAIF,sBAAIM,UAAWP,GACb,gBAAC,KAAD,CAAMW,GAAG,SAASJ,UAAWN,GAA7B,UAIF,sBAAIM,UAAWP,GACb,gBAAC,KAAD,CAAMW,GAAG,QAAQJ,UAAWN,GAA5B,WAMN,4BACE,sBAAIM,UDjDS,iCCiDYJ,GACxBC,M,8DC2CT,UA3FiB,SAAC,GAAc,IAExBQ,EAFuB,EAAXP,KAEIQ,OAAOC,OAAS,GAEtC,GAA0BC,EAAAA,EAAAA,UAAS,CACjCC,cAAe,GACfC,WALiB,KAGZC,EAAP,KAAcC,EAAd,KAKMC,EAAoB,SAACC,GACzB,IAAMJ,EAAa,IAAIK,OAAOD,EAAME,OAAOC,MAAO,KAI5CR,EAAgBJ,EAASa,QAAO,SAACC,GACrC,MAAwBA,EAAKC,YAArBjB,EAAR,EAAQA,MAAOkB,EAAf,EAAeA,KACf,OAIEX,EAAWY,KAAKnB,IAAUkB,EAAKE,MAAK,SAACC,GAAD,OAASd,EAAWY,KAAKE,SAKjEZ,EAAS,CACPH,cAAAA,EACAC,WAAAA,KAIEe,EAAe,SAACX,GACpBY,QAAQC,IAAIb,GACZc,SAASC,eAAe,cAAcZ,MAAQH,EAAME,OAAOC,MAC3DJ,EAAkBC,IAGZL,EAA8BE,EAA9BF,cAAeC,EAAeC,EAAfD,WAEjBoB,EADmBrB,GArCN,KAqCuBC,EACTD,EAAgBJ,EAEjD,OACE,gBAAC,IAAD,CAAQT,UAAU,YAChB,yBACEmC,GAAG,aACHC,KAAK,OACLC,aAAa,GACbC,SAAUrB,IAEXiB,EAAMK,KAAI,SAACC,GAAD,OACT,uBAAKC,IAAKD,EAAKL,GAAI/B,UAAU,WAC3B,uBAAKA,UAAU,YAAYoC,EAAKhB,YAAYkB,MAC5C,uBAAKtC,UAAU,YACb,gBAAC,KAAD,CAAMI,GAAE,SAAWgC,EAAKG,MAASH,EAAKhB,YAAYjB,QAEpD,uBAAKH,UAAU,YACZoC,EAAKhB,YAAYC,KAAKc,KAAI,SAACX,GAAD,OACzB,yBACEQ,KAAK,SACLhC,UAAU,aACViB,MAAOO,EACPa,IAAKD,EAAKL,GAAKP,EACfgB,QAASf,e","sources":["webpack://test1/./src/components/layout.module.css","webpack://test1/./src/components/layout.js","webpack://test1/./src/pages/post/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--YM7Lx\";\nexport var heading = \"layout-module--heading--2By-2\";\nexport var navLinks = \"layout-module--nav-links--1VlO2\";\nexport var navLinkItem = \"layout-module--nav-link-item--31U8T\";\nexport var navLinkText = \"layout-module--nav-link-text--ExV28\";\nexport var siteTitle = \"layout-module--site-title--16llq\";","import * as React from \"react\";\nimport { Link, graphql, useStaticQuery } from \"gatsby\";\nimport {\n  container,\n  heading,\n  navLinks,\n  navLinkItem,\n  navLinkText,\n  siteTitle,\n} from \"./layout.module.css\";\n//import { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\nrequire(`katex/dist/katex.min.css`);\n\n//deckDeckGoHighlightElement();\n\nconst Layout = ({ pageTitle, children }) => {\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n  return (\n    <div className={container}>\n      <title>\n        {pageTitle} | {data.site.siteMetadata.title}\n      </title>\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\n      <nav>\n        <ul className={navLinks}>\n          <li className={navLinkItem}>\n            <Link to=\"/\" className={navLinkText}>\n              HOME\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/about\" className={navLinkText}>\n              ABOUT\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/post\" className={navLinkText}>\n              POST\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <main>\n        <h1 className={heading}>{pageTitle}</h1>\n        {children}\n      </main>\n    </div>\n  );\n};\nexport default Layout;","import React, { useState } from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../../components/layout\";\n\nconst BlogPage = ({ data }) => {\n  const emptyQuery = \"\";\n  const allPosts = data.allMdx.nodes || [];\n\n  const [state, setState] = useState({\n    postsFiltered: [],\n    inputQuery: emptyQuery,\n  });\n\n  const handleInputChange = (event) => {\n    const inputQuery = new RegExp(event.target.value, \"i\");\n    // case insensitive regex\n\n    // Nge-filter post\n    const postsFiltered = allPosts.filter((post) => {\n      const { title, tags } = post.frontmatter;\n      return (\n        // Check if query contained in title\n        // or\n        // Check if query contained in any of the tag\n        inputQuery.test(title) || tags.some((tag) => inputQuery.test(tag))\n      );\n    });\n\n    // Nge update state\n    setState({\n      postsFiltered,\n      inputQuery,\n    });\n  };\n\n  const changeSearch = (event) => {\n    console.log(event);\n    document.getElementById(\"postSearch\").value = event.target.value;\n    handleInputChange(event);\n  };\n\n  const { postsFiltered, inputQuery } = state;\n  const hasSearchResults = postsFiltered && inputQuery !== emptyQuery;\n  const posts = hasSearchResults ? postsFiltered : allPosts;\n\n  return (\n    <Layout pageTitle=\"My Posts\">\n      <input\n        id=\"postSearch\"\n        type=\"text\"\n        defaultValue=\"\"\n        onChange={handleInputChange}\n      />\n      {posts.map((node) => (\n        <div key={node.id} className=\"postBox\">\n          <div className=\"postDate\">{node.frontmatter.date}</div>\n          <div className=\"postLink\">\n            <Link to={`/post/${node.slug}`}>{node.frontmatter.title}</Link>\n          </div>\n          <div className=\"postTags\">\n            {node.frontmatter.tags.map((tag) => (\n              <input\n                type=\"button\"\n                className=\"postTagBox\"\n                value={tag}\n                key={node.id + tag}\n                onClick={changeSearch}\n              />\n            ))}\n          </div>\n        </div>\n      ))}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(\n      sort: { order: DESC, fields: frontmatter___date }\n      filter: { frontmatter: { hidden: { ne: true } } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          date(formatString: \"DD MMM YYYY\")\n          tags\n        }\n        id\n        slug\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n"],"names":["navLinkItem","navLinkText","require","pageTitle","children","data","useStaticQuery","className","site","siteMetadata","title","to","allPosts","allMdx","nodes","useState","postsFiltered","inputQuery","state","setState","handleInputChange","event","RegExp","target","value","filter","post","frontmatter","tags","test","some","tag","changeSearch","console","log","document","getElementById","posts","id","type","defaultValue","onChange","map","node","key","date","slug","onClick"],"sourceRoot":""}